<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="WbQuerySql">
	<typeAlias alias="UserItem" type="com.origin.aiur.pojo.VoUser" />
	<typeAlias alias="GroupItem" type="com.origin.aiur.pojo.VoGroup" />
	<typeAlias alias="GpActivityItem" type="com.origin.aiur.pojo.VoGroupActivity" />

	<resultMap id="UserResult" class="UserItem">
		<result property="userID" column="user_id" javaType="long" />
		<result property="loginName" column="login_name" />
		<result property="nickName" column="nick_name" />
		<result property="userGroupList" column="ref_id" select="queryUserGroupList" />
	</resultMap>

	<resultMap id="GroupResult" class="GroupItem">
		<result property="groupId" column="group_id" javaType="long" />
		<result property="groupName" column="group_name" />
		<result property="groupDesc" column="group_desc" />
		<result property="ownerUserId" column="owner_id" javaType="long" />
	</resultMap>

	<resultMap id="GpAcitivityResult" class="GpActivityItem">
		<result property="activityId" column="consume_id" javaType="long" />
		<result property="groupId" column="group_id" javaType="long" />
		<result property="groupName" column="group_name" />
		<result property="description" column="description" />
		<result property="money" column="money" javaType="double" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" javaType="long" />
	</resultMap>

	<select id="checkUserAccount" parameterClass="java.util.Map"
		resultMap="UserResult">
		<![CDATA[
			SELECT user_id,
				   login_name,
				   nick_name,
				   user_id as ref_id
			  FROM aiur_users
			 WHERE login_name = #login_name:VARCHAR#
			   AND password = #pwd_val:VARCHAR#
			 LIMIT 1
		]]>
	</select>

	<select id="queryUserGroupList" parameterClass="long" resultMap="GroupResult">
		<![CDATA[
			SELECT g.group_id,
			       g.group_name,
			       g.group_desc,
			       g.owner_id
			  FROM aiur_groups g,
			       aiur_rel_user_group r
			 WHERE g.group_id = r.group_id
			   AND r.user_id = #value#
			   AND r.status = 2
			 ORDER BY g.create_time desc
		]]>
	</select>

	<select id="isUserExists" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1)
			  FROM aiur_users
			 WHERE login_name = #value#
		]]>
	</select>

	<insert id="insertNewUser">
		<![CDATA[
			INSERT INTO aiur_users(
				login_name,
				nick_name,
				password,
				create_time,
				update_time
			)VALUES(
				#login_name:VARCHAR#,
				#nick_name:VARCHAR#,
				#pwd_val:VARCHAR#,
				now(),
				now()
			)
		]]>
		<selectKey resultClass="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>


	<select id="queryUserAccount" parameterClass="java.lang.Long"
		resultMap="UserResult">
		<![CDATA[
			SELECT user_id,
				   login_name,
				   nick_name,
				   user_id as ref_id
			  FROM aiur_users
			 WHERE user_id = #value#
		]]>
	</select>

	<select id="queryGroupActivity" parameterClass="java.lang.Long"
		resultMap="GpAcitivityResult">
		<![CDATA[
			SELECT g.consume_id,
				   g.group_id,
				   ag.group_name,
				   g.description,
				   g.money,
				   g.status,
				   UNIX_TIMESTAMP(g.create_time) * 1000 as create_time
			  FROM aiur_group_consume g,
			       aiur_rel_user_group r,
			       aiur_groups ag
			 WHERE g.group_id = r.group_id
			   AND g.group_id = ag.group_id
			   AND r.user_id  = #value#
			 ORDER BY g.update_time desc 
		]]>
	</select>

	<select id="queryUserConsumeSummary" parameterClass="java.lang.Long" resultClass="java.lang.Double">
		<![CDATA[
			SELECT IFNULL(sum(money), 0) as total_consume
			  FROM aiur_user_consume_detail
			 WHERE user_id = #value#
		]]>
	</select>

	<select id="queryUserIncomingSummary" parameterClass="java.lang.Long" resultClass="java.lang.Double">
		<![CDATA[
			SELECT IFNULL(sum(money), 0) as total_consume
			  FROM aiur_user_incomming
			 WHERE user_id = #value#
			   AND status = 'OK'
		]]>
	</select>

	<insert id="insertNewGroup">
		<![CDATA[
			INSERT INTO aiur_groups(
				owner_id,
				group_name,
				group_desc,
				create_time,
				update_time
			)VALUES(
				#ownerUserId:DECIMAL#,
				#groupName:VARCHAR#,
				#groupDesc:VARCHAR#,
				now(),
				now()
			)
		]]>
		<selectKey resultClass="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertUserGroupRef">
	    <![CDATA[
			INSERT INTO aiur_rel_user_group(
				user_id,
				group_id,
				status,
				create_time,
				update_time
			)VALUES(
				#user_id:DECIMAL#,
				#group_id:DECIMAL#,
				#status:VARCHAR#,
				now(),
				now()
			)
		]]>
	</insert>

	<select id="searchGroupList" parameterClass="java.util.Map" resultMap="GroupResult">
		<![CDATA[
			SELECT g.group_id,
				   CONCAT(g.group_name, '/', u.nick_name) AS group_name,
			       g.group_desc,
				   g.owner_id
			  FROM aiur_groups g,
			       aiur_users u
			 WHERE g.owner_id = u.user_id
			   AND g.group_name LIKE CONCAT('%', #search_text:VARCHAR#, '%')
			   AND g.group_id NOT IN (SELECT g.group_id
			                            FROM aiur_groups g,
			                                 aiur_rel_user_group r
			                           WHERE g.group_id = r.group_id
			                             AND r.user_id = #user_id:DECIMAL#
			                             AND r.status IN ('JOINED', 'PENDING'))
		]]>
	</select>

	<select id="checkUserGroupExists" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1)
			  FROM aiur_groups
			 WHERE group_name = #group_name:VARCHAR#
			   AND owner_id = #owner_id:DECIMAL#
		]]>
	</select>

	<select id="getUserGroup" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT count(1)
			  FROM aiur_rel_user_group
			 WHERE user_id =  #user_id:DECIMAL#
			   AND group_id = #group_id:DECIMAL#
		]]>
	</select>
</sqlMap>